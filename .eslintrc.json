{
  "extends": [
    "prettier"
  ],
  "overrides": [
    {
      "files": [
        "**/*.cjs",
        "**/*.md/*.cjs"
      ],
      "parserOptions": {
        "sourceType": "script"
      },
      "rules": {
        "import/extensions": "off",
        "import/no-commonjs": "off",
        "no-restricted-globals": "off"
      }
    },
    {
      "files": [
        "**/*.mjs"
      ],
      "parserOptions": {
        "sourceType": "module"
      }
    },
    {
      "files": [
        "**/*.md"
      ],
      "processor": "markdown/markdown"
    },
    {
      "files": [
        "**/*.cts",
        "**/*.ts",
        "**/*.tsx"
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "project": "tsconfig.eslint.json"
      },
      "rules": {
        "@typescript-eslint/await-thenable": "error",
        "@typescript-eslint/consistent-type-imports": [
          "error",
          {
            "fixStyle": "separate-type-imports",
            "prefer": "type-imports"
          }
        ],
        "@typescript-eslint/explicit-module-boundary-types": [
          "error",
          {
            "allowDirectConstAssertionInArrowFunctions": true
          }
        ],
        "@typescript-eslint/no-floating-promises": "error",
        "@typescript-eslint/no-import-type-side-effects": "error",
        "@typescript-eslint/no-require-imports": "error",
        "@typescript-eslint/no-shadow": [
          "error",
          {
            "hoist": "all"
          }
        ],
        "@typescript-eslint/promise-function-async": "error",
        "@typescript-eslint/quotes": [
          "error",
          "backtick"
        ],
        "@typescript-eslint/require-await": "error",
        "import/consistent-type-specifier-style": [
          "error",
          "prefer-top-level"
        ],
        "no-shadow": "off",
        "quotes": "off"
      }
    },
    {
      "files": [
        "**/*.cts"
      ],
      "rules": {
        "@typescript-eslint/no-require-imports": "off",
        "import/extensions": "off",
        "import/no-commonjs": "off",
        "no-restricted-globals": "off"
      }
    },
    {
      "files": [
        "**/*.md/*.cts",
        "**/*.md/*.ts",
        "**/*.md/*.tsx"
      ],
      "parserOptions": {
        "project": null
      },
      "rules": {
        "@typescript-eslint/await-thenable": "off",
        "@typescript-eslint/no-floating-promises": "off",
        "@typescript-eslint/promise-function-async": "off",
        "@typescript-eslint/require-await": "off"
      }
    }
  ],
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "plugins": [
    "import",
    "markdown",
    "@typescript-eslint"
  ],
  "root": true,
  "rules": {
    "complexity": "error",
    "curly": "error",
    "eqeqeq": [
      "error",
      "always",
      {
        "null": "ignore"
      }
    ],
    "import/extensions": [
      "error",
      "always",
      {
        "ignorePackages": true
      }
    ],
    "import/no-commonjs": "error",
    "import/no-duplicates": [
      "error",
      {
        "considerQueryString": true
      }
    ],
    "import/no-extraneous-dependencies": "error",
    "import/order": [
      "error",
      {
        "alphabetize": {
          "order": "asc"
        },
        "groups": [
          "type",
          [
            "builtin",
            "external",
            "internal",
            "parent",
            "sibling",
            "index",
            "object"
          ]
        ],
        "newlines-between": "always",
        "warnOnUnassignedImports": true
      }
    ],
    "no-restricted-globals": [
      "error",
      {
        "message": "Use \"dirname(fileURLToPath(import.meta.url))\" instead.",
        "name": "__dirname"
      },
      {
        "message": "Use \"fileURLToPath(import.meta.url)\" instead.",
        "name": "__filename"
      }
    ],
    "no-shadow": "error",
    "object-shorthand": "error",
    "prefer-const": [
      "error",
      {
        "destructuring": "all"
      }
    ],
    "quotes": [
      "error",
      "backtick"
    ],
    "sort-imports": [
      "error",
      {
        "ignoreDeclarationSort": true,
        "ignoreMemberSort": false
      }
    ]
  }
}
